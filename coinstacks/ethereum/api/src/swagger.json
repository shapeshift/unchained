{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Token": {
				"description": "Contains info about a token including balance for an address",
				"properties": {
					"type": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"contract": {
						"type": "string"
					},
					"symbol": {
						"type": "string"
					},
					"decimals": {
						"type": "number",
						"format": "double"
					},
					"balance": {
						"type": "string"
					}
				},
				"required": [
					"type",
					"name",
					"contract",
					"symbol",
					"decimals",
					"balance"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EthereumBalance": {
				"description": "Contains additional ethereum specific balance info",
				"properties": {
					"pubkey": {
						"type": "string"
					},
					"balance": {
						"type": "string"
					},
					"tokens": {
						"items": {
							"$ref": "#/components/schemas/Token"
						},
						"type": "array"
					}
				},
				"required": [
					"pubkey",
					"balance",
					"tokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BadRequestError": {
				"description": "Contains info about a 400 Bad Request response",
				"properties": {
					"error": {
						"type": "string"
					}
				},
				"required": [
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ValidationError": {
				"description": "Contains info about a 422 Validation Error response",
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Validation failed"
						],
						"nullable": false
					},
					"details": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					}
				},
				"required": [
					"message",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InternalServerError": {
				"description": "Contains info about a 500 Internal Server Error response",
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Tx": {
				"description": "Contains info about a transaction",
				"properties": {
					"txid": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"blockHash": {
						"type": "string"
					},
					"blockHeight": {
						"type": "number",
						"format": "double"
					},
					"confirmations": {
						"type": "number",
						"format": "double"
					},
					"timestamp": {
						"type": "number",
						"format": "double"
					},
					"from": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"fee": {
						"type": "string"
					}
				},
				"required": [
					"txid",
					"status",
					"from",
					"value",
					"fee"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TxHistory": {
				"description": "Contains paginated transaction history",
				"properties": {
					"page": {
						"type": "number",
						"format": "double"
					},
					"totalPages": {
						"type": "number",
						"format": "double"
					},
					"txs": {
						"type": "number",
						"format": "double"
					},
					"transactions": {
						"items": {
							"$ref": "#/components/schemas/Tx"
						},
						"type": "array"
					}
				},
				"required": [
					"page",
					"totalPages",
					"txs",
					"transactions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SendTxBody": {
				"description": "Contains the serialized raw transaction hex",
				"properties": {
					"hex": {
						"type": "string"
					}
				},
				"required": [
					"hex"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "@shapeshiftoss/ethereum-api",
		"version": "0.1.1",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/v1/balance/{pubkey}": {
			"get": {
				"operationId": "GetBalance",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EthereumBalance"
								},
								"examples": {
									"Example 1": {
										"value": {
											"pubkey": "0xB3DD70991aF983Cf82d95c46C24979ee98348ffa",
											"balance": "284809805024198107",
											"tokens": [
												{
													"type": "ERC20",
													"name": "FOX",
													"contract": "0xc770EEfAd204B5180dF6a14Ee197D99d808ee52d",
													"symbol": "FOX",
													"decimals": 18,
													"balance": "1337"
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Get balance of a pubkey",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [
					{
						"description": "account pubkey",
						"in": "path",
						"name": "pubkey",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "0xB3DD70991aF983Cf82d95c46C24979ee98348ffa"
					}
				]
			}
		},
		"/api/v1/txs/{pubkey}": {
			"get": {
				"operationId": "GetTxHistory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TxHistory"
								},
								"examples": {
									"Example 1": {
										"value": {
											"page": 1,
											"totalPages": 1,
											"txs": 1,
											"transactions": [
												{
													"txid": "0x85092cf7a2ec34ba4109ef1215b5b486911163b9d3391e3508670229f4d866e7",
													"status": "confirmed",
													"from": "0xB3DD70991aF983Cf82d95c46C24979ee98348ffa",
													"to": "0x34249a379Af1Fe3b53e143c0f1B5590778ce2cfC",
													"blockHash": "0xc962b0662752ac15671512ca612c894051d8b671375de1cd84f12c5e720dc7ef",
													"blockHeight": 11427335,
													"confirmations": 9,
													"timestamp": 1607632210,
													"value": "20000000000000000",
													"fee": "5250000000000000"
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Get transaction history of a pubkey",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [
					{
						"description": "account pubkey",
						"in": "path",
						"name": "pubkey",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "0xB3DD70991aF983Cf82d95c46C24979ee98348ffa"
					},
					{
						"description": "page number",
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "page size",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": 25,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "filter by contract address (only supported by coins which support contracts)",
						"in": "query",
						"name": "contract",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/v1/estimate-gas": {
			"get": {
				"operationId": "EstimateGas",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								},
								"examples": {
									"Example 1": {
										"value": "26540"
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Get the estimated gas cost of a transaction",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [
					{
						"description": "input data",
						"in": "query",
						"name": "data",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "0x"
					},
					{
						"description": "to address",
						"in": "query",
						"name": "to",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "0x642F4Bda144C63f6DC47EE0fDfbac0a193e2eDb7"
					},
					{
						"description": "transaction value in ether",
						"in": "query",
						"name": "value",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "0.0123"
					}
				]
			}
		},
		"/api/v1/gas-price": {
			"get": {
				"operationId": "GetGasPrice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								},
								"examples": {
									"Example 1": {
										"value": "123456789"
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Get the current gas price from the node",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/v1/nonce/{address}": {
			"get": {
				"operationId": "GetNonce",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "number",
									"format": "double"
								},
								"examples": {
									"Example 1": {
										"value": 21933
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Get the current nonce of an address",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [
					{
						"description": "account address",
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "0xB3DD70991aF983Cf82d95c46C24979ee98348ffa"
					}
				]
			}
		},
		"/api/v1/send": {
			"post": {
				"operationId": "SendTx",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								},
								"examples": {
									"Example 1": {
										"value": "0xb9d4ad5408f53eac8627f9ccd840ba8fb3469d55cd9cc2a11c6e049f1eef4edd"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Sends raw transaction to be broadcast to the node.",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "serialized raw transaction hex",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SendTxBody"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}