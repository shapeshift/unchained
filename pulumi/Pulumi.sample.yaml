## All uncommented configuration is required for local development
## Reasonable defaults are provided where applicable
## Feel free to modify as needed

config:
  unchained:common:
    # cluster - used to specify the kube context for local development and also used to set the correct storage class
    cluster: # docker-desktop, minikube, eks

    # isLocal - is used to specify a local development environment (docker-desktop, minikube)
    # if set to false, eks cluster configuration and rootDomainName is required
    isLocal: true

    ## additionalEnvironments - is used to create additional environments inside of new namespaces
    ## by default 1 namespace is always created 'unchained'. However, if there are any additionalEnvironments it will create namepspaces per `unchained-<environment>`
    ## ie. 'unchained-dev'
    #additionalEnvironments:
    #  - dev

    ## eks - configuration for eks cluster
    #eks:
    #  # allAzs - if true, will deploy to all AZs in specified region, otherwise deploys to 2 AZs which is the minimum required by EKS
    #  allAZs: false
    #  # autoscaling - if enabled will create a cluster autoscaler deployment (https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler)
    #  autoscaling:
    #    enabled: false
    #    # min/max instances per availability zone, if using 3 AZ's this cluster would have min 3 max 9 instances 
    #    minInstances: 1
    #    maxInstances: 3
    #  # profile - local profile to use as configured in ~/.aws/credentials file
    #  profile: 'default'
    #  # cidrBlock - private subnet cidrRange for the VPC
    #  cidrBlock: '10.0.0.0/16'
    #  # email - email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails.
    #  email:
    #  # instanceTypes - list of instance types for the kublets (https://aws.amazon.com/ec2/spot/pricing/)
    #  instanceTypes:
    #    - 't3.small'
    #    - 't3.medium'
    #    - 't3.large'
    #  # numInstancesPerAZ - the number of desired instances to run in each AZ, if autoscaling is enabled ensure this value is within the bounds of min/max instances per AZ
    #  numInstancesPerAZ: 1
    #  # region - aws region to deploy the stack to
    #  region: 'us-east-1'

    ## traefik - additional ingress controller configuration
    #traefik:
    #  replicas: 3
    #  resources:
    #    cpu: '300m'
    #    memory: '256Mi'
    #  # whitelist - list of cidrs to allow ingress into the cluster
    #  whitelist:
    #    - '0.0.0.0/0'

    ## dockerhub - specifies a personal dockerhub account in which to push/pull images from
    ## if not specified, the public shapeshift images will be used
    #dockerhub:
    #  username:
    #  password:
    #  server: # docker.io/username

    ## rootDomainName - requires configured Route53 domain name and DNS Registrar (https://github.com/shapeshift/cluster-launcher/blob/main/README.md#configure-route53--dns-registrar)
    #rootDomainName:

    # rabbit - creates an internal rabbitmq cluster (useful if you don't have a hosted rabbit cluster to point at)
    rabbit:
      adminPort: 31672
      rabbitPort: 30672
      cpuLimit: '1'
      memoryLimit: '256Mi'
      storageSize: '1Gi'
