ARG GOLANG_VERSION=1.20-buster
ARG BASE_IMAGE=golang:${GOLANG_VERSION}

#
# build environment
#
FROM ${BASE_IMAGE} AS build

ARG INSTALL_PACKAGES

RUN apt-get update && \
	apt-get install --no-install-recommends --assume-yes curl unzip pv ${INSTALL_PACKAGES} && \
	apt-get clean

ARG VERSION
ARG REPOSITORY
ARG BUILD_DIR=/data

RUN git clone $REPOSITORY /data
WORKDIR $BUILD_DIR
RUN git checkout $VERSION

ARG BUILD_PATH=$GOPATH/bin
ARG BUILD_CMD="make install"
ARG PROJECT_BIN

RUN $BUILD_CMD

RUN ldd $BUILD_PATH/$PROJECT_BIN | tr -s '[:blank:]' '\n' | grep '^/' | \
	xargs -I % sh -c 'mkdir -p $(dirname deps%); cp % deps%;'

RUN mv $BUILD_PATH/$PROJECT_BIN /bin/$PROJECT_BIN

#
# zstd dependency
#
FROM gcc:12 AS zstd_build

ARG ZTSD_SOURCE_URL="https://github.com/facebook/zstd/releases/download/v1.5.5/zstd-1.5.5.tar.gz"

RUN apt-get update && \
	apt-get install --no-install-recommends --assume-yes meson ninja-build && \
	apt-get clean

RUN mkdir -p /tmp/zstd
WORKDIR /tmp/zstd

RUN curl -Lo zstd.source $ZTSD_SOURCE_URL && \
    file zstd.source | grep -q 'gzip compressed data' && mv zstd.source zstd.source.gz && gzip -d zstd.source.gz && \
    file zstd.source | grep -q 'tar archive' && mv zstd.source zstd.source.tar && tar -xf zstd.source.tar --strip-components=1 && rm zstd.source.tar

RUN LDFLAGS=-static \
	meson setup \
	-Dbin_programs=true \
	-Dstatic_runtime=true \
	-Ddefault_library=static \
	-Dzlib=disabled \
	-Dlzma=disabled \
	-Dlz4=disabled \
	build/meson builddir-st

RUN ninja -C builddir-st && \
	ninja -C builddir-st install && \
	/usr/local/bin/zstd -v

#
# Final image
#
FROM debian:buster as daemon

ARG PROJECT
ARG PROJECT_BIN=$PROJECT
ARG BUILD_DIR=/data

COPY --from=build /bin/$PROJECT_BIN /bin/$PROJECT_BIN
COPY --from=build $BUILD_DIR/deps/ /

RUN apt-get update && \
	apt-get install --no-install-recommends --assume-yes ca-certificates curl wget file unzip liblz4-tool gnupg2 jq pv && \
	apt-get clean

COPY --from=zstd_build /usr/local/bin/zstd /bin/

ARG PROJECT_DIR
ARG NAMESPACE

ENV PROJECT=$PROJECT
ENV PROJECT_BIN=$PROJECT_BIN
ENV PROJECT_DIR=$PROJECT_DIR
ENV NAMESPACE=$NAMESPACE

EXPOSE 26656 26657 1317 9090 8080

COPY ../scripts/run.sh /usr/bin/
RUN chmod +x /usr/bin/run.sh

ENTRYPOINT ["run.sh"]

CMD $START_CMD
