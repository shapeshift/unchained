ARG GOLANG_VERSION=1.22.0-buster
ARG BASE_IMAGE=golang:${GOLANG_VERSION}

#
# build environment
#
FROM ${BASE_IMAGE} AS build

ENV PACKAGES curl make git libc-dev bash gcc linux-headers eudev-dev python3
RUN apk add --no-cache $PACKAGES

ARG VERSION
ARG REPOSITORY

RUN git clone $REPOSITORY /data
WORKDIR /data
RUN git checkout $VERSION

RUN go mod download
RUN CGO_ENABLED=0 make install

#
# Final image
#
FROM alpine:latest

ARG NAMESPACE
ARG PROJECT
ARG PROJECT_BIN
ARG PROJECT_DIR

ENV NAMESPACE=$NAMESPACE
ENV PROJECT=$PROJECT
ENV PROJECT_BIN=$PROJECT_BIN
ENV PROJECT_DIR=$PROJECT_DIR

COPY --from=build /go/bin/$PROJECT_BIN /usr/local/bin/

RUN apk update && \
	apk add --no-cache bash curl wget file unzip lz4 gnupg jq pv zstd && \
	rm -rf /var/cache/apk/*

EXPOSE 26656 26657 1317 9090

COPY ../scripts/run.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/run.sh

ENTRYPOINT ["run.sh"]