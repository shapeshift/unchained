{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Provides access to cosmos chain data.",
    "title": "Cosmos Unchained API",
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Websocket"
        ],
        "summary": "Subscribe to pending and confirmed transactions.",
        "operationId": "Websocket",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/account/{pubkey}": {
      "get": {
        "tags": [
          "v1"
        ],
        "summary": "Get account details.",
        "operationId": "GetAccount",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Pubkey",
            "description": "Account address or xpub",
            "name": "pubkey",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Account",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "BadRequestError",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/api/v1/account/{pubkey}/txs": {
      "get": {
        "tags": [
          "v1"
        ],
        "summary": "Get paginated transaction history.",
        "operationId": "GetTxHistory",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Pubkey",
            "description": "Account address or xpub",
            "name": "pubkey",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Cursor",
            "description": "Pagination cursor from previous response or empty string for first page fetch",
            "name": "cursor",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "PageSize",
            "description": "Page size",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "TxHistory",
            "schema": {
              "$ref": "#/definitions/TxHistory"
            }
          },
          "400": {
            "description": "BadRequestError",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/api/v1/gas/estimate": {
      "post": {
        "tags": [
          "v1"
        ],
        "summary": "Get the estimated gas cost for a transaction.",
        "operationId": "EstimateGas",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "rawTx"
              ],
              "properties": {
                "rawTx": {
                  "description": "Raw transaction",
                  "type": "string",
                  "x-go-name": "RawTx"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TransactionHash",
            "schema": {
              "$ref": "#/definitions/TransactionHash"
            }
          },
          "400": {
            "description": "BadRequestError",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/api/v1/info": {
      "get": {
        "tags": [
          "v1"
        ],
        "summary": "Get information about the running coinstack.",
        "operationId": "GetInfo",
        "responses": {
          "200": {
            "description": "Info",
            "schema": {
              "$ref": "#/definitions/Info"
            }
          }
        }
      }
    },
    "/api/v1/send": {
      "post": {
        "tags": [
          "v1"
        ],
        "summary": "Sends raw transaction to be broadcast to the node.",
        "operationId": "SendTx",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "rawTx"
              ],
              "properties": {
                "rawTx": {
                  "description": "Raw transaction",
                  "type": "string",
                  "x-go-name": "RawTx"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TransactionHash",
            "schema": {
              "$ref": "#/definitions/TransactionHash"
            }
          },
          "400": {
            "description": "BadRequestError",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/api/v1/tx/{txid}": {
      "get": {
        "description": "# Get transaction details",
        "tags": [
          "v1"
        ],
        "operationId": "GetTx",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "TxID",
            "description": "Transaction hash",
            "name": "txid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Tx",
            "schema": {
              "$ref": "#/definitions/Tx"
            }
          },
          "400": {
            "description": "BadRequestError",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/api/v1/validators": {
      "get": {
        "tags": [
          "v1"
        ],
        "summary": "Get the list of current validators.",
        "operationId": "GetValidators",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Cursor",
            "description": "Pagination cursor from previous response or empty string for first page fetch",
            "name": "cursor",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "PageSize",
            "description": "Page size",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Validators",
            "schema": {
              "$ref": "#/definitions/Validators"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/api/v1/validators/{pubkey}": {
      "get": {
        "tags": [
          "v1"
        ],
        "summary": "Get a specific validator.",
        "operationId": "GetValidator",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Pubkey",
            "description": "Account address or xpub",
            "name": "pubkey",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Validator",
            "schema": {
              "$ref": "#/definitions/Validator"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/api/v1/validators/{pubkey}/txs": {
      "get": {
        "tags": [
          "v1"
        ],
        "summary": "Get paginated transaction history for a validator.",
        "operationId": "ValidatorTxHistory",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Pubkey",
            "description": "Account address or xpub",
            "name": "pubkey",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Cursor",
            "description": "Pagination cursor from previous response or empty string for first page fetch",
            "name": "cursor",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "PageSize",
            "description": "Page size",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "TxHistory",
            "schema": {
              "$ref": "#/definitions/TxHistory"
            }
          },
          "400": {
            "description": "BadRequestError",
            "schema": {
              "$ref": "#/definitions/BadRequestError"
            }
          },
          "500": {
            "description": "InternalServerError",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "description": "Contains info about account details for an address or xpub",
      "allOf": [
        {
          "$ref": "#/definitions/CosmosSDKAccount"
        },
        {
          "$ref": "#/definitions/Staking"
        }
      ],
      "x-go-package": "github.com/shapeshift/unchained/coinstacks/cosmos/api"
    },
    "ApiError": {
      "description": "Generic api error for handling failed requests",
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-name": "Error",
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "Attribute": {
      "description": "Contains info about a transaction log event key/val attribute",
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string",
          "x-go-name": "Key",
          "example": "action"
        },
        "value": {
          "type": "string",
          "x-go-name": "Value",
          "example": "/cosmos.bank.v1beta1.MsgSend"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "AttributesByEvent": {
      "description": "Contains info about event attributes keyed by event type",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ValueByAttribute"
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "BadRequestError": {
      "description": "Contains info about a 400 Bad Request response",
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "string",
          "x-go-name": "Error"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "BaseAccount": {
      "description": "Contains info about required base account details for an address or xpub",
      "type": "object",
      "required": [
        "balance",
        "unconfirmedBalance",
        "pubkey"
      ],
      "properties": {
        "balance": {
          "type": "string",
          "x-go-name": "Balance",
          "example": "123456789"
        },
        "pubkey": {
          "type": "string",
          "x-go-name": "Pubkey"
        },
        "unconfirmedBalance": {
          "type": "string",
          "x-go-name": "UnconfirmedBalance",
          "example": "0"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "BaseInfo": {
      "description": "Contains required base info about the running coinstack",
      "type": "object",
      "required": [
        "network"
      ],
      "properties": {
        "network": {
          "type": "string",
          "x-go-name": "Network",
          "example": "mainnet"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "BaseTx": {
      "description": "Contains info about required base transaction details",
      "type": "object",
      "required": [
        "txid",
        "blockHeight",
        "timestamp"
      ],
      "properties": {
        "blockHash": {
          "type": "string",
          "x-go-name": "BlockHash"
        },
        "blockHeight": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "BlockHeight",
          "example": 1000000
        },
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Timestamp",
          "example": 1643052655037
        },
        "txid": {
          "type": "string",
          "x-go-name": "TxID"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "BaseTxHistory": {
      "description": "Contains info about required base transaction history details",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "type": "object",
          "required": [
            "pubkey",
            "txs"
          ],
          "properties": {
            "pubkey": {
              "type": "string",
              "x-go-name": "Pubkey"
            },
            "txs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tx"
              },
              "x-go-name": "Txs"
            }
          }
        }
      ],
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "CosmosSDKAccount": {
      "description": "Contains common cosmossdk info about account details for an address or xpub",
      "allOf": [
        {
          "$ref": "#/definitions/BaseAccount"
        },
        {
          "type": "object",
          "required": [
            "accountNumber",
            "sequence",
            "assets"
          ],
          "properties": {
            "accountNumber": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "AccountNumber",
              "example": 420
            },
            "assets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Value"
              },
              "x-go-name": "Assets"
            },
            "sequence": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "Sequence",
              "example": 69
            }
          }
        }
      ],
      "x-go-name": "Account",
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "CosmosSDKInfo": {
      "description": "Contains common cosmossdk info about the running coinstack",
      "allOf": [
        {
          "$ref": "#/definitions/BaseInfo"
        }
      ],
      "x-go-name": "Info",
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "Delegation": {
      "description": "Contains info about a staking delegation",
      "type": "object",
      "required": [
        "validator",
        "shares",
        "balance"
      ],
      "properties": {
        "balance": {
          "$ref": "#/definitions/Value"
        },
        "shares": {
          "type": "string",
          "x-go-name": "Shares",
          "example": "123456.789"
        },
        "validator": {
          "$ref": "#/definitions/Validator"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "Event": {
      "description": "Contains info about a transaction log event",
      "type": "object",
      "required": [
        "type",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "x-go-name": "Attributes"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type",
          "example": "message"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "EventsByMsgIndex": {
      "description": "Contains info about transaction events keyed by message index",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/AttributesByEvent"
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "GasAmount": {
      "type": "string",
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "Info": {
      "description": "Contains info about the running coinstack",
      "allOf": [
        {
          "$ref": "#/definitions/CosmosSDKInfo"
        },
        {
          "type": "object",
          "required": [
            "totalSupply",
            "bondedTokens",
            "apr",
            "annualProvisions",
            "communityTax"
          ],
          "properties": {
            "annualProvisions": {
              "type": "string",
              "x-go-name": "AnnualProvisions",
              "example": "29255184955917.174457731278996910"
            },
            "apr": {
              "type": "string",
              "x-go-name": "APR",
              "example": "0.1541068456"
            },
            "bondedTokens": {
              "type": "string",
              "x-go-name": "BondedTokens",
              "example": "186039736185555"
            },
            "communityTax": {
              "type": "string",
              "x-go-name": "CommunityTax",
              "example": "0.020000000000000000"
            },
            "totalSupply": {
              "type": "string",
              "x-go-name": "TotalSupply",
              "example": "291107634956378"
            }
          }
        }
      ],
      "x-go-package": "github.com/shapeshift/unchained/coinstacks/cosmos/api"
    },
    "InternalServerError": {
      "description": "Contains info about a 500 Internal Server Error response",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "Message": {
      "description": "Contains info about a transaction message",
      "type": "object",
      "required": [
        "origin",
        "from",
        "to",
        "type",
        "value"
      ],
      "properties": {
        "from": {
          "type": "string",
          "x-go-name": "From"
        },
        "origin": {
          "type": "string",
          "x-go-name": "Origin"
        },
        "to": {
          "type": "string",
          "x-go-name": "To"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type",
          "example": "/cosmos.bank.v1beta1.MsgSend"
        },
        "value": {
          "$ref": "#/definitions/Value"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "Pagination": {
      "description": "Contains info about pagination metadata",
      "type": "object",
      "required": [
        "cursor"
      ],
      "properties": {
        "cursor": {
          "description": "Base64 encoded string to fetch next page or undefined if no more data avaiable",
          "type": "string",
          "x-go-name": "Cursor",
          "example": "d2l0aGRyYXdfZGVsZWdhdG9yX3Jld2FyZA=="
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "Redelegation": {
      "description": "Contains info about a staking redelegation",
      "type": "object",
      "required": [
        "sourceValidator",
        "destinationValidator",
        "entries"
      ],
      "properties": {
        "destinationValidator": {
          "$ref": "#/definitions/Validator"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RedelegationEntry"
          },
          "x-go-name": "Entries"
        },
        "sourceValidator": {
          "$ref": "#/definitions/Validator"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "RedelegationEntry": {
      "description": "Contains info about a redelegation action",
      "type": "object",
      "required": [
        "completionTime",
        "shares",
        "balance"
      ],
      "properties": {
        "balance": {
          "type": "string",
          "x-go-name": "Balance",
          "example": "123456"
        },
        "completionTime": {
          "type": "string",
          "x-go-name": "CompletionTime",
          "example": "1642533407592"
        },
        "shares": {
          "type": "string",
          "x-go-name": "Shares",
          "example": "123456.789"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "Reward": {
      "description": "Contains info about a validator reward",
      "type": "object",
      "required": [
        "validator",
        "rewards"
      ],
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Value"
          },
          "x-go-name": "Rewards"
        },
        "validator": {
          "$ref": "#/definitions/Validator"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "Staking": {
      "description": "Contains info about current staking state",
      "type": "object",
      "required": [
        "delegations",
        "redelegations",
        "unbondings",
        "rewards"
      ],
      "properties": {
        "delegations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Delegation"
          },
          "x-go-name": "Delegations"
        },
        "redelegations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Redelegation"
          },
          "x-go-name": "Redelegations"
        },
        "rewards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Reward"
          },
          "x-go-name": "Rewards"
        },
        "unbondings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Unbonding"
          },
          "x-go-name": "Unbondings"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "TransactionHash": {
      "type": "string",
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "Tx": {
      "description": "Contains info about a transaction",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseTx"
        },
        {
          "type": "object",
          "required": [
            "confirmations",
            "fee",
            "gasUsed",
            "gasWanted",
            "index",
            "value",
            "messages",
            "events"
          ],
          "properties": {
            "confirmations": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "Confirmations"
            },
            "events": {
              "$ref": "#/definitions/EventsByMsgIndex"
            },
            "fee": {
              "$ref": "#/definitions/Value"
            },
            "gasUsed": {
              "type": "string",
              "x-go-name": "GasUsed",
              "example": "888"
            },
            "gasWanted": {
              "type": "string",
              "x-go-name": "GasWanted",
              "example": "999"
            },
            "index": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "Index",
              "example": 1
            },
            "memo": {
              "type": "string",
              "x-go-name": "Memo"
            },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Message"
              },
              "x-go-name": "Messages"
            },
            "value": {
              "type": "string",
              "x-go-name": "Value"
            }
          }
        }
      ],
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "TxHistory": {
      "description": "Contains info about transaction history for an address or xpub",
      "allOf": [
        {
          "$ref": "#/definitions/BaseTxHistory"
        },
        {
          "type": "object",
          "required": [
            "txs"
          ],
          "properties": {
            "txs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tx"
              },
              "x-go-name": "Txs"
            }
          }
        }
      ],
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "Unbonding": {
      "description": "Contains info about a staking unbonding",
      "type": "object",
      "required": [
        "validator",
        "entries"
      ],
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnbondingEntry"
          },
          "x-go-name": "Entries"
        },
        "validator": {
          "$ref": "#/definitions/Validator"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "UnbondingEntry": {
      "description": "Contains info about an unbonding action",
      "type": "object",
      "required": [
        "completionTime",
        "balance"
      ],
      "properties": {
        "balance": {
          "$ref": "#/definitions/Value"
        },
        "completionTime": {
          "type": "string",
          "x-go-name": "CompletionTime",
          "example": "1642533407592"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "ValidationError": {
      "description": "Contains info about a 422 Validation Error response",
      "type": "object",
      "required": [
        "message",
        "details"
      ],
      "properties": {
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Details"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message",
          "example": "Validation failed"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/api"
    },
    "Validator": {
      "description": "Contains info about a validator",
      "type": "object",
      "required": [
        "address",
        "moniker",
        "jailed",
        "status",
        "tokens",
        "shares",
        "website",
        "description",
        "apr",
        "unbonding",
        "commission"
      ],
      "properties": {
        "address": {
          "type": "string",
          "x-go-name": "Address"
        },
        "apr": {
          "type": "string",
          "x-go-name": "APR",
          "example": "0.1541068456"
        },
        "commission": {
          "$ref": "#/definitions/ValidatorCommission"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description",
          "example": "Your most super validator around!"
        },
        "jailed": {
          "type": "boolean",
          "x-go-name": "Jailed",
          "example": false
        },
        "moniker": {
          "type": "string",
          "x-go-name": "Moniker",
          "example": "SuperVal"
        },
        "shares": {
          "type": "string",
          "x-go-name": "Shares",
          "example": "12345.6789"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status",
          "example": "BOND_STATUS_BONDED"
        },
        "tokens": {
          "type": "string",
          "x-go-name": "Tokens",
          "example": "12345"
        },
        "unbonding": {
          "$ref": "#/definitions/ValidatorUnbonding"
        },
        "website": {
          "type": "string",
          "x-go-name": "Website",
          "example": "http://superval.com"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "ValidatorCommission": {
      "description": "Contains info about validator commission settings",
      "type": "object",
      "required": [
        "rate",
        "maxRate",
        "maxChangeRate"
      ],
      "properties": {
        "maxChangeRate": {
          "type": "string",
          "x-go-name": "MaxChangeRate",
          "example": "0.010000000000000000"
        },
        "maxRate": {
          "type": "string",
          "x-go-name": "MaxRate",
          "example": "0.200000000000000000"
        },
        "rate": {
          "type": "string",
          "x-go-name": "Rate",
          "example": "0.050000000000000000"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "ValidatorUnbonding": {
      "description": "Contains info about validator unbonding settings",
      "type": "object",
      "required": [
        "height",
        "timestamp"
      ],
      "properties": {
        "height": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Height",
          "example": 8897990
        },
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Timestamp",
          "example": 1642776702
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "Validators": {
      "description": "Contains a list of validators",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "type": "object",
          "required": [
            "validators"
          ],
          "properties": {
            "validators": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Validator"
              },
              "x-go-name": "Validators"
            }
          }
        }
      ],
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "Value": {
      "description": "Contains info about an asset value",
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "type": "string",
          "x-go-name": "Amount",
          "example": "123456789"
        },
        "denom": {
          "type": "string",
          "x-go-name": "Denom",
          "example": "udenom"
        }
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    },
    "ValueByAttribute": {
      "description": "Contains info about an attribute value keyed by attribute type",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "x-go-package": "github.com/shapeshift/unchained/pkg/cosmos"
    }
  }
}