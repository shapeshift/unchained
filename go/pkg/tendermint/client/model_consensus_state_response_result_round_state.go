/*
Tendermint RPC

Tendermint supports the following RPC protocols:  * URI over HTTP * JSONRPC over HTTP * JSONRPC over websockets  ## Configuration  RPC can be configured by tuning parameters under `[rpc]` table in the `$TMHOME/config/config.toml` file or by using the `--rpc.X` command-line flags.  Default rpc listen address is `tcp://0.0.0.0:26657`. To set another address, set the `laddr` config parameter to desired value. CORS (Cross-Origin Resource Sharing) can be enabled by setting `cors_allowed_origins`, `cors_allowed_methods`, `cors_allowed_headers` config parameters.  ## Arguments  Arguments which expect strings or byte arrays may be passed as quoted strings, like `\"abc\"` or as `0x`-prefixed strings, like `0x616263`.  ## URI/HTTP  A REST like interface.      curl localhost:26657/block?height=5  ## JSONRPC/HTTP  JSONRPC requests can be POST'd to the root RPC endpoint via HTTP.      curl --header \"Content-Type: application/json\" --request POST --data '{\"method\": \"block\", \"params\": [\"5\"], \"id\": 1}' localhost:26657  ## JSONRPC/websockets  JSONRPC requests can be also made via websocket. The websocket endpoint is at `/websocket`, e.g. `localhost:26657/websocket`. Asynchronous RPC functions like event `subscribe` and `unsubscribe` are only available via websockets.  Example using https://github.com/hashrocket/ws:      ws ws://localhost:26657/websocket     > { \"jsonrpc\": \"2.0\", \"method\": \"subscribe\", \"params\": [\"tm.event='NewBlock'\"], \"id\": 1 } 

API version: Master
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ConsensusStateResponseResultRoundState struct for ConsensusStateResponseResultRoundState
type ConsensusStateResponseResultRoundState struct {
	HeightRoundStep string `json:"height/round/step"`
	StartTime string `json:"start_time"`
	ProposalBlockHash string `json:"proposal_block_hash"`
	LockedBlockHash string `json:"locked_block_hash"`
	ValidBlockHash string `json:"valid_block_hash"`
	HeightVoteSet []ConsensusStateResponseResultRoundStateHeightVoteSet `json:"height_vote_set"`
	Proposer ConsensusStateResponseResultRoundStateProposer `json:"proposer"`
}

// NewConsensusStateResponseResultRoundState instantiates a new ConsensusStateResponseResultRoundState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsensusStateResponseResultRoundState(heightRoundStep string, startTime string, proposalBlockHash string, lockedBlockHash string, validBlockHash string, heightVoteSet []ConsensusStateResponseResultRoundStateHeightVoteSet, proposer ConsensusStateResponseResultRoundStateProposer) *ConsensusStateResponseResultRoundState {
	this := ConsensusStateResponseResultRoundState{}
	this.HeightRoundStep = heightRoundStep
	this.StartTime = startTime
	this.ProposalBlockHash = proposalBlockHash
	this.LockedBlockHash = lockedBlockHash
	this.ValidBlockHash = validBlockHash
	this.HeightVoteSet = heightVoteSet
	this.Proposer = proposer
	return &this
}

// NewConsensusStateResponseResultRoundStateWithDefaults instantiates a new ConsensusStateResponseResultRoundState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsensusStateResponseResultRoundStateWithDefaults() *ConsensusStateResponseResultRoundState {
	this := ConsensusStateResponseResultRoundState{}
	return &this
}

// GetHeightRoundStep returns the HeightRoundStep field value
func (o *ConsensusStateResponseResultRoundState) GetHeightRoundStep() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HeightRoundStep
}

// GetHeightRoundStepOk returns a tuple with the HeightRoundStep field value
// and a boolean to check if the value has been set.
func (o *ConsensusStateResponseResultRoundState) GetHeightRoundStepOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HeightRoundStep, true
}

// SetHeightRoundStep sets field value
func (o *ConsensusStateResponseResultRoundState) SetHeightRoundStep(v string) {
	o.HeightRoundStep = v
}

// GetStartTime returns the StartTime field value
func (o *ConsensusStateResponseResultRoundState) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *ConsensusStateResponseResultRoundState) GetStartTimeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *ConsensusStateResponseResultRoundState) SetStartTime(v string) {
	o.StartTime = v
}

// GetProposalBlockHash returns the ProposalBlockHash field value
func (o *ConsensusStateResponseResultRoundState) GetProposalBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProposalBlockHash
}

// GetProposalBlockHashOk returns a tuple with the ProposalBlockHash field value
// and a boolean to check if the value has been set.
func (o *ConsensusStateResponseResultRoundState) GetProposalBlockHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProposalBlockHash, true
}

// SetProposalBlockHash sets field value
func (o *ConsensusStateResponseResultRoundState) SetProposalBlockHash(v string) {
	o.ProposalBlockHash = v
}

// GetLockedBlockHash returns the LockedBlockHash field value
func (o *ConsensusStateResponseResultRoundState) GetLockedBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LockedBlockHash
}

// GetLockedBlockHashOk returns a tuple with the LockedBlockHash field value
// and a boolean to check if the value has been set.
func (o *ConsensusStateResponseResultRoundState) GetLockedBlockHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LockedBlockHash, true
}

// SetLockedBlockHash sets field value
func (o *ConsensusStateResponseResultRoundState) SetLockedBlockHash(v string) {
	o.LockedBlockHash = v
}

// GetValidBlockHash returns the ValidBlockHash field value
func (o *ConsensusStateResponseResultRoundState) GetValidBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValidBlockHash
}

// GetValidBlockHashOk returns a tuple with the ValidBlockHash field value
// and a boolean to check if the value has been set.
func (o *ConsensusStateResponseResultRoundState) GetValidBlockHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ValidBlockHash, true
}

// SetValidBlockHash sets field value
func (o *ConsensusStateResponseResultRoundState) SetValidBlockHash(v string) {
	o.ValidBlockHash = v
}

// GetHeightVoteSet returns the HeightVoteSet field value
func (o *ConsensusStateResponseResultRoundState) GetHeightVoteSet() []ConsensusStateResponseResultRoundStateHeightVoteSet {
	if o == nil {
		var ret []ConsensusStateResponseResultRoundStateHeightVoteSet
		return ret
	}

	return o.HeightVoteSet
}

// GetHeightVoteSetOk returns a tuple with the HeightVoteSet field value
// and a boolean to check if the value has been set.
func (o *ConsensusStateResponseResultRoundState) GetHeightVoteSetOk() (*[]ConsensusStateResponseResultRoundStateHeightVoteSet, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HeightVoteSet, true
}

// SetHeightVoteSet sets field value
func (o *ConsensusStateResponseResultRoundState) SetHeightVoteSet(v []ConsensusStateResponseResultRoundStateHeightVoteSet) {
	o.HeightVoteSet = v
}

// GetProposer returns the Proposer field value
func (o *ConsensusStateResponseResultRoundState) GetProposer() ConsensusStateResponseResultRoundStateProposer {
	if o == nil {
		var ret ConsensusStateResponseResultRoundStateProposer
		return ret
	}

	return o.Proposer
}

// GetProposerOk returns a tuple with the Proposer field value
// and a boolean to check if the value has been set.
func (o *ConsensusStateResponseResultRoundState) GetProposerOk() (*ConsensusStateResponseResultRoundStateProposer, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Proposer, true
}

// SetProposer sets field value
func (o *ConsensusStateResponseResultRoundState) SetProposer(v ConsensusStateResponseResultRoundStateProposer) {
	o.Proposer = v
}

func (o ConsensusStateResponseResultRoundState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["height/round/step"] = o.HeightRoundStep
	}
	if true {
		toSerialize["start_time"] = o.StartTime
	}
	if true {
		toSerialize["proposal_block_hash"] = o.ProposalBlockHash
	}
	if true {
		toSerialize["locked_block_hash"] = o.LockedBlockHash
	}
	if true {
		toSerialize["valid_block_hash"] = o.ValidBlockHash
	}
	if true {
		toSerialize["height_vote_set"] = o.HeightVoteSet
	}
	if true {
		toSerialize["proposer"] = o.Proposer
	}
	return json.Marshal(toSerialize)
}

type NullableConsensusStateResponseResultRoundState struct {
	value *ConsensusStateResponseResultRoundState
	isSet bool
}

func (v NullableConsensusStateResponseResultRoundState) Get() *ConsensusStateResponseResultRoundState {
	return v.value
}

func (v *NullableConsensusStateResponseResultRoundState) Set(val *ConsensusStateResponseResultRoundState) {
	v.value = val
	v.isSet = true
}

func (v NullableConsensusStateResponseResultRoundState) IsSet() bool {
	return v.isSet
}

func (v *NullableConsensusStateResponseResultRoundState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsensusStateResponseResultRoundState(val *ConsensusStateResponseResultRoundState) *NullableConsensusStateResponseResultRoundState {
	return &NullableConsensusStateResponseResultRoundState{value: val, isSet: true}
}

func (v NullableConsensusStateResponseResultRoundState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsensusStateResponseResultRoundState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


