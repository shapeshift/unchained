version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:14.17.3
  pulumi:
    docker:
      - image: pulumi/pulumi-nodejs:3.11.0

aliases:
  - &only-feature
    filters:
      branches:
        ignore:
          - main
          - develop

  - &only-develop
    filters:
      branches:
        only:
          - develop

  - &only-main
    filters:
      branches:
        only:
          - main

  - &bitcoin
    coinstack: bitcoin
    pulumi-stack: public
    pulumi-dir: coinstacks/bitcoin/pulumi
    broker-url: bitcoin-rabbitmq-svc.unchained.svc.cluster.local:5672
    mongo-cpu-limit: 512m
    mongo-memory-limit: 512Mi
    mongo-replicas: 3
    mongo-storage-size: 100Gi
    mongo-url: mongodb://bitcoin-mongodb-0.bitcoin-mongodb-headless.unchained.svc.cluster.local:27017,bitcoin-mongodb-1.bitcoin-mongodb-headless.unchained.svc.cluster.local:27017,bitcoin-mongodb-2.bitcoin-mongodb-headless.unchained.svc.cluster.local:27017/?replicaSet=rs0
    rabbit-cpu-limit: '1'
    rabbit-memory-limit: '4Gi'
    rabbit-storage-size: '100Gi'
    indexer-cpu-limit: '4'
    indexer-memory-limit: 12Gi
    indexer-replicas: 2
    indexer-storage-size: 500Gi
    indexer-url: http://bitcoin-indexer-svc.unchained.svc.cluster.local:8001
    indexer-ws-url: ws://bitcoin-indexer-svc.unchained.svc.cluster.local:8001/websocket
    daemon-image: ruimarinho/bitcoin-core:0.21.0
    daemon-cpu-limit: '2'
    daemon-memory-limit: 12Gi
    daemon-storage-size: 1500Gi
    rpc-url: http://user:password@bitcoin-indexer-svc.unchained.svc.cluster.local:8332

  - &ethereum
    coinstack: ethereum
    pulumi-stack: public
    pulumi-dir: coinstacks/ethereum/pulumi
    broker-url: ethereum-rabbitmq-svc.unchained.svc.cluster.local:5672
    mongo-cpu-limit: 512m
    mongo-memory-limit: 512Mi
    mongo-replicas: 3
    mongo-storage-size: 100Gi
    mongo-url: mongodb://ethereum-mongodb-0.ethereum-mongodb-headless.unchained.svc.cluster.local:27017,ethereum-mongodb-1.ethereum-mongodb-headless.unchained.svc.cluster.local:27017,ethereum-mongodb-2.ethereum-mongodb-headless.unchained.svc.cluster.local:27017/?replicaSet=rs0
    rabbit-cpu-limit: '1'
    rabbit-memory-limit: '4Gi'
    rabbit-storage-size: '100Gi'
    indexer-cpu-limit: '4'
    indexer-memory-limit: 12Gi
    indexer-replicas: 2
    indexer-storage-size: 500Gi
    indexer-url: http://ethereum-indexer-svc.unchained.svc.cluster.local:8001
    indexer-ws-url: ws://ethereum-indexer-svc.unchained.svc.cluster.local:8001/websocket
    daemon-image: ethereum/client-go:v1.10.11
    daemon-cpu-limit: '2'
    daemon-memory-limit: 24Gi
    daemon-storage-size: 1500Gi
    rpc-url: http://ethereum-indexer-svc.unchained.svc.cluster.local:8332

  - &ethereum-ropsten
    coinstack: ethereum
    pulumi-stack: public-ropsten
    pulumi-dir: coinstacks/ethereum/pulumi
    broker-url: ethereum-ropsten-rabbitmq-svc.unchained.svc.cluster.local:5672
    mongo-cpu-limit: 512m
    mongo-memory-limit: 512Mi
    mongo-replicas: 3
    mongo-storage-size: 100Gi
    mongo-url: mongodb://ethereum-ropsten-mongodb-0.ethereum-ropsten-mongodb-headless.unchained.svc.cluster.local:27017,ethereum-ropsten-mongodb-1.ethereum-ropsten-mongodb-headless.unchained.svc.cluster.local:27017,ethereum-ropsten-mongodb-2.ethereum-ropsten-mongodb-headless.unchained.svc.cluster.local:27017/?replicaSet=rs0
    rabbit-cpu-limit: '1'
    rabbit-memory-limit: '4Gi'
    rabbit-storage-size: '100Gi'
    indexer-cpu-limit: '4'
    indexer-memory-limit: 12Gi
    indexer-replicas: 2
    indexer-storage-size: 250Gi
    indexer-url: http://ethereum-ropsten-indexer-svc.unchained.svc.cluster.local:8001
    indexer-ws-url: ws://ethereum-ropsten-indexer-svc.unchained.svc.cluster.local:8001/websocket
    daemon-image: ethereum/client-go:v1.10.11
    daemon-cpu-limit: '2'
    daemon-memory-limit: 24Gi
    daemon-storage-size: 500Gi
    rpc-url: http://ethereum-ropsten-indexer-svc.unchained.svc.cluster.local:8332

commands:
  unchained-precheck:
    description: checkout project, install dependencies, build, lint and test
    steps:
      - checkout
      - run:
          name: install openjdk-11
          command: |
            curl -O https://download.java.net/java/ga/jdk11/openjdk-11_linux-x64_bin.tar.gz
            tar zxvf openjdk-11_linux-x64_bin.tar.gz
            echo 'export PATH=$PATH:$(pwd)/jdk-11/bin' >> $BASH_ENV
      - run:
          name: yarn install
          command: yarn install --immutable
      - run:
          name: build
          command: yarn build
      - run:
          name: lint
          command: yarn lint
      - run:
          name: test
          command: yarn test
  pulumi-dependencies:
    description: set up pulumi dependencies
    steps:
      - run:
          name: install tools
          command: |
            apt update
            apt install wget unzip
      - run:
          name: install aws-cli
          command: |
            wget -O awscliv2.zip https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
            unzip awscliv2.zip
            ./aws/install
      - run:
          name: install docker cli
          command: |
            wget -O dockercli.deb https://download.docker.com/linux/debian/dists/buster/pool/stable/amd64/docker-ce-cli_20.10.5~3-0~debian-buster_amd64.deb
            dpkg -i dockercli.deb
      - run:
          name: install kubectl
          command: |
            wget -O kubectl "https://dl.k8s.io/release/v1.21.3/bin/linux/amd64/kubectl"
            chmod +x kubectl
            mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: install helm charts
          command: |
            wget -O helm.tar.gz https://get.helm.sh/helm-v3.6.2-linux-amd64.tar.gz
            tar -zxvf helm.tar.gz
            mv linux-amd64/helm /usr/local/bin/helm
            helm repo add autoscaler https://kubernetes.github.io/autoscaler
            helm repo add bitnami https://charts.bitnami.com/bitnami
            helm repo add eks https://aws.github.io/eks-charts
            helm repo add grafana https://grafana.github.io/helm-charts
            helm repo add traefik https://helm.traefik.io/traefik
            helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      - run:
          name: install pulumi plugin resources
          command: |
            pulumi plugin install resource aws v4.17.0
            pulumi plugin install resource kubernetes v3.6.3
            pulumi plugin install resource eks 0.32.0
      - run:
          name: create aws credentials file
          command: |
            mkdir ~/.aws
            echo [default] >> ~/.aws/credentials
            echo aws_access_key_id = $AWS_ACCESS_KEY_ID >> ~/.aws/credentials
            echo aws_secret_access_key = $AWS_SECRET_ACCESS_KEY >> ~/.aws/credentials

jobs:
  deploy-dependencies:
    description: deploy all common unchained dependencies
    executor: pulumi
    environment:
      DOCKER_BUILDKIT: 1
    steps:
      - setup_remote_docker:
          version: 20.10.2
      - attach_workspace:
          at: ~/
      - pulumi-dependencies
      - run:
          name: pulumi up
          working_directory: pulumi
          command: |
            pulumi stack select $PULUMI_ORG/dependencies
            pulumi config set --path unchained:common.cluster eks
            pulumi config set --path unchained:common.isLocal false
            pulumi config set --path unchained:common.additionalEnvironments[0] dev
            pulumi config set --path unchained:common.additionalEnvironments[1] monitoring
            pulumi config set --path unchained:common.eks.allAZs true
            pulumi config set --path unchained:common.eks.autoscaling true
            pulumi config set --path unchained:common.eks.region $AWS_REGION
            pulumi config set --path unchained:common.eks.cidrBlock 10.0.0.0/16
            pulumi config set --path unchained:common.eks.nodeGroups[0].name spot
            pulumi config set --path unchained:common.eks.nodeGroups[0].type SPOT
            pulumi config set --path unchained:common.eks.nodeGroups[0].minSize 2
            pulumi config set --path unchained:common.eks.nodeGroups[0].maxSize 5
            pulumi config set --path unchained:common.eks.nodeGroups[0].instanceTypes[0] r5.4xlarge
            pulumi config set --path unchained:common.eks.nodeGroups[0].instanceTypes[1] r5a.4xlarge
            pulumi config set --path unchained:common.eks.nodeGroups[0].instanceTypes[2] r5b.4xlarge
            pulumi config set --path unchained:common.eks.nodeGroups[0].instanceTypes[3] r5n.4xlarge
            pulumi config set --path unchained:common.traefik.whitelist[0] 173.245.48.0/20
            pulumi config set --path unchained:common.traefik.whitelist[1] 103.21.244.0/22
            pulumi config set --path unchained:common.traefik.whitelist[2] 103.22.200.0/22
            pulumi config set --path unchained:common.traefik.whitelist[3] 103.31.4.0/22
            pulumi config set --path unchained:common.traefik.whitelist[4] 141.101.64.0/18
            pulumi config set --path unchained:common.traefik.whitelist[5] 108.162.192.0/18
            pulumi config set --path unchained:common.traefik.whitelist[6] 190.93.240.0/20
            pulumi config set --path unchained:common.traefik.whitelist[7] 188.114.96.0/20
            pulumi config set --path unchained:common.traefik.whitelist[8] 197.234.240.0/22
            pulumi config set --path unchained:common.traefik.whitelist[9] 198.41.128.0/17
            pulumi config set --path unchained:common.traefik.whitelist[10] 162.158.0.0/15
            pulumi config set --path unchained:common.traefik.whitelist[11] 104.16.0.0/13
            pulumi config set --path unchained:common.traefik.whitelist[12] 104.24.0.0/14
            pulumi config set --path unchained:common.traefik.whitelist[13] 172.64.0.0/13
            pulumi config set --path unchained:common.traefik.whitelist[14] 131.0.72.0/22
            pulumi config set --path unchained:common.dockerhub.username $DOCKERHUB_USERNAME
            pulumi config set --path unchained:common.dockerhub.password $DOCKERHUB_PASSWORD --plaintext
            pulumi config set --path unchained:common.dockerhub.server docker.io
            pulumi config set --path unchained:common.rootDomainName $ROOT_DOMAIN_NAME
            pulumi up -f --yes --suppress-outputs

  deploy-coinstack:
    description: deploy a specific coinstack
    executor: pulumi
    environment:
      DOCKER_BUILDKIT: 1
      LOG_LEVEL: debug
      MIDGARD_URL: https://midgard.thorchain.info
      MONGO_DBNAME: coinstack
    parameters:
      coinstack:
        description: coinstack name
        type: string
      environment:
        description: environment to deploy into. empty string ('') is our prod
        type: string
        default: ''
      network:
        type: string
        default: mainnet
      pulumi-stack:
        description: pulumi stack to deploy to (public)
        type: string
      pulumi-dir:
        description: path to pulumi directory
        type: string
      pulumi-command:
        type: string
        default: pulumi up -f --yes --suppress-outputs
      broker-url:
        type: string
      mongo-cpu-limit:
        type: string
      mongo-memory-limit:
        type: string
      mongo-replicas:
        type: integer
      mongo-storage-size:
        type: string
      mongo-url:
        type: string
      rabbit-cpu-limit:
        type: string
      rabbit-memory-limit:
        type: string
      rabbit-storage-size:
        type: string
      indexer-cpu-limit:
        type: string
      indexer-memory-limit:
        type: string
      indexer-replicas:
        type: integer
      indexer-storage-size:
        type: string
      indexer-url:
        type: string
      indexer-ws-url:
        type: string
      rpc-url:
        type: string
      daemon-image:
        type: string
      daemon-cpu-limit:
        type: string
      daemon-memory-limit:
        type: string
      daemon-storage-size:
        type: string
    steps:
      - setup_remote_docker:
          version: 20.10.2
      - attach_workspace:
          at: ~/
      - pulumi-dependencies
      - run:
          name: add custom environment variables
          command: |
            echo 'export BROKER_URL=<< parameters.broker-url >>' >> $BASH_ENV
            echo 'export INDEXER_URL=<< parameters.indexer-url >>' >> $BASH_ENV
            echo 'export INDEXER_WS_URL=<< parameters.indexer-ws-url >>' >> $BASH_ENV
            echo 'export MONGO_URL=<< parameters.mongo-url >>' >> $BASH_ENV
            echo 'export NETWORK=<< parameters.network >>' >> $BASH_ENV
            echo 'export RPC_URL=<< parameters.rpc-url >>' >> $BASH_ENV
      - run:
          name: pulumi up
          working_directory: << parameters.pulumi-dir >>
          command: |
            pulumi stack select $PULUMI_ORG/<< parameters.pulumi-stack >>
            pulumi config set --path unchained:<< parameters.coinstack >>.stack $PULUMI_ORG/common/dependencies
            [ -n "<< parameters.environment >>" ] && pulumi config set --path unchained:<< parameters.coinstack >>.environment << parameters.environment >>
            pulumi config set --path unchained:<< parameters.coinstack >>.network << parameters.network >>
            pulumi config set --path unchained:<< parameters.coinstack >>.api.enableDatadogLogs true
            pulumi config set --path unchained:<< parameters.coinstack >>.ingester.enableDatadogLogs true
            pulumi config set --path unchained:<< parameters.coinstack >>.mongo.cpuLimit << parameters.mongo-cpu-limit >>
            pulumi config set --path unchained:<< parameters.coinstack >>.mongo.memoryLimit << parameters.mongo-memory-limit >>
            pulumi config set --path unchained:<< parameters.coinstack >>.mongo.helmChartVersion 10.19.0
            pulumi config set --path unchained:<< parameters.coinstack >>.mongo.replicaCount << parameters.mongo-replicas >>
            pulumi config set --path unchained:<< parameters.coinstack >>.mongo.storageSize << parameters.mongo-storage-size >>
            pulumi config set --path unchained:<< parameters.coinstack >>.rabbit.cpuLimit << parameters.rabbit-cpu-limit >>
            pulumi config set --path unchained:<< parameters.coinstack >>.rabbit.memoryLimit << parameters.rabbit-memory-limit >>
            pulumi config set --path unchained:<< parameters.coinstack >>.rabbit.storageSize << parameters.rabbit-storage-size >>
            pulumi config set --path unchained:<< parameters.coinstack >>.indexer.cpuLimit << parameters.indexer-cpu-limit >>
            pulumi config set --path unchained:<< parameters.coinstack >>.indexer.memoryLimit << parameters.indexer-memory-limit >>
            pulumi config set --path unchained:<< parameters.coinstack >>.indexer.replicas << parameters.indexer-replicas >>
            pulumi config set --path unchained:<< parameters.coinstack >>.indexer.storageSize << parameters.indexer-storage-size >>
            pulumi config set --path unchained:<< parameters.coinstack >>.indexer.daemon.image << parameters.daemon-image >>
            pulumi config set --path unchained:<< parameters.coinstack >>.indexer.daemon.cpuLimit << parameters.daemon-cpu-limit >>
            pulumi config set --path unchained:<< parameters.coinstack >>.indexer.daemon.memoryLimit << parameters.daemon-memory-limit >>
            pulumi config set --path unchained:<< parameters.coinstack >>.indexer.daemon.storageSize << parameters.daemon-storage-size >>
            << parameters.pulumi-command >>

  deploy-monitoring:
    description: deploy unchained monitoring stack
    executor: pulumi
    steps:
      - setup_remote_docker:
         version: 20.10.2
      - attach_workspace:
         at: ~/
      - pulumi-dependencies
      - run:
         name: pulumi up
         working_directory: monitoring
         command: |
           pulumi stack select $PULUMI_ORG/prod
           pulumi config set --path unchained:monitoring.stack $PULUMI_ORG/common/dependencies
           pulumi config set --path unchained:monitoring.environment monitoring
           pulumi config set --path unchained:monitoring.githubOrg $GITHUB_ORG
           pulumi config set --path unchained:monitoring.githubOauthID $GITHUB_OAUTH_ID
           pulumi config set --path unchained:monitoring.githubOauthSecret $GITHUB_OAUTH_SECRET --plaintext
           pulumi up -f --yes --suppress-outputs


  lint-and-test:
    description: lint and test project
    executor: node
    steps:
      - unchained-precheck

  lint-and-test-persist:
    description: lint and test project (persist to workspace)
    executor: node
    steps:
      - unchained-precheck
      - run:
          name: Remove devDependencies
          command: yarn --production --ignore-scripts --prefer-offline --silent --frozen-lockfile
      - persist_to_workspace:
          root: '~'
          paths:
            - project

  publish:
    description: publish packages
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run: yarn lerna publish from-package --yes

workflows:
  version: 2
  check:
    jobs:
      - lint-and-test:
          name: lint and test project
          <<: *only-feature
  deploy-development:
    jobs:
      - lint-and-test-persist:
          name: lint and test project (persist to workspace)
          <<: *only-develop

      - deploy-dependencies:
          name: deploy common unchained dependencies
          requires:
            - lint and test project (persist to workspace)
          <<: *only-develop

      ########## (BITCOIN DEV) ##########
      - deploy-coinstack:
          name: deploy bitcoin develop
          <<: *bitcoin
          environment: dev
          pulumi-stack: public-dev
          broker-url: bitcoin-rabbitmq-svc.unchained-dev.svc.cluster.local:5672
          mongo-replicas: 2
          mongo-url: mongodb://bitcoin-mongodb-0.bitcoin-mongodb-headless.unchained-dev.svc.cluster.local:27017,bitcoin-mongodb-1.bitcoin-mongodb-headless.unchained-dev.svc.cluster.local:27017/?replicaSet=rs0
          indexer-replicas: 1
          indexer-url: http://bitcoin-indexer-svc.unchained-dev.svc.cluster.local:8001
          indexer-ws-url: ws://bitcoin-indexer-svc.unchained-dev.svc.cluster.local:8001/websocket
          rpc-url: http://user:password@bitcoin-indexer-svc.unchained-dev.svc.cluster.local:8332
          requires:
            - deploy common unchained dependencies
          <<: *only-develop

      ########## (ETHEREUM DEV) ##########
      - deploy-coinstack:
          name: deploy ethereum develop
          <<: *ethereum
          environment: dev
          pulumi-stack: public-dev
          broker-url: ethereum-rabbitmq-svc.unchained-dev.svc.cluster.local:5672
          mongo-replicas: 2
          mongo-url: mongodb://ethereum-mongodb-0.ethereum-mongodb-headless.unchained-dev.svc.cluster.local:27017,ethereum-mongodb-1.ethereum-mongodb-headless.unchained-dev.svc.cluster.local:27017/?replicaSet=rs0
          indexer-replicas: 1
          indexer-url: http://ethereum-indexer-svc.unchained-dev.svc.cluster.local:8001
          indexer-ws-url: ws://ethereum-indexer-svc.unchained-dev.svc.cluster.local:8001/websocket
          rpc-url: http://ethereum-indexer-svc.unchained-dev.svc.cluster.local:8332
          requires:
            - deploy common unchained dependencies
          <<: *only-develop

      ########## (ETHEREUM-ROPSTEN DEV) ##########
      - deploy-coinstack:
          name: deploy ethereum-ropsten develop
          <<: *ethereum-ropsten
          environment: dev
          network: ropsten
          pulumi-stack: public-dev-ropsten
          broker-url: ethereum-ropsten-rabbitmq-svc.unchained-dev.svc.cluster.local:5672
          mongo-replicas: 2
          mongo-url: mongodb://ethereum-ropsten-mongodb-0.ethereum-ropsten-mongodb-headless.unchained-dev.svc.cluster.local:27017,ethereum-ropsten-mongodb-1.ethereum-ropsten-mongodb-headless.unchained-dev.svc.cluster.local:27017/?replicaSet=rs0
          indexer-replicas: 1
          indexer-url: http://ethereum-ropsten-indexer-svc.unchained-dev.svc.cluster.local:8001
          indexer-ws-url: ws://ethereum-ropsten-indexer-svc.unchained-dev.svc.cluster.local:8001/websocket
          rpc-url: http://ethereum-ropsten-indexer-svc.unchained-dev.svc.cluster.local:8332
          requires:
            - deploy common unchained dependencies
          <<: *only-develop

      - approve-monitoring:
          name: approve monitoring stack
          type: approval
          requires:
            - deploy common unchained dependencies
          <<: *only-develop

      - deploy-monitoring:
          name: deploy unchained monitoring stack
          requires:
            - approve monitoring stack
          <<: *only-develop

  deploy-main:
    jobs:
      - lint-and-test-persist:
          name: lint and test project (persist to workspace)
          <<: *only-main

      - deploy-dependencies:
          name: deploy common unchained dependencies
          requires:
            - lint and test project (persist to workspace)
          <<: *only-main

      ########## (BITCOIN) ##########
      - deploy-coinstack:
          name: preview bitcoin coinstack
          pulumi-command: pulumi preview
          <<: *bitcoin
          requires:
            - deploy common unchained dependencies
          <<: *only-main

      - approve-coinstack:
          name: approve bitcoin coinstack
          type: approval
          requires:
            - preview bitcoin coinstack
          <<: *only-main

      - deploy-coinstack:
          name: deploy bitcoin coinstack
          <<: *bitcoin
          requires:
            - approve bitcoin coinstack
          <<: *only-main

      ########## (ETHEREUM) ##########
      - deploy-coinstack:
          name: preview ethereum coinstack
          pulumi-command: pulumi preview
          <<: *ethereum
          requires:
            - deploy common unchained dependencies
          <<: *only-main

      - approve-coinstack:
          name: approve ethereum coinstack
          type: approval
          requires:
            - preview ethereum coinstack
          <<: *only-main

      - deploy-coinstack:
          name: deploy ethereum coinstack
          <<: *ethereum
          requires:
            - approve ethereum coinstack
          <<: *only-main

      ########## (POST DEPLOY) ##########
      - publish:
          name: publish packages
          requires:
            - deploy bitcoin coinstack
            - deploy ethereum coinstack
          <<: *only-main
