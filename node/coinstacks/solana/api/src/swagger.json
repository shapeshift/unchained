{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"BaseInfo": {
				"description": "Contains base info about the running coinstack",
				"properties": {
					"network": {
						"type": "string"
					}
				},
				"required": [
					"network"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenBalance": {
				"description": "Contains info about a token including balance for an address",
				"properties": {
					"id": {
						"type": "string"
					},
					"decimals": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"symbol": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"balance": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"decimals",
					"name",
					"symbol",
					"type",
					"balance"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Account": {
				"description": "Contains info about an address or extended public key account",
				"properties": {
					"balance": {
						"type": "string"
					},
					"unconfirmedBalance": {
						"type": "string"
					},
					"pubkey": {
						"type": "string"
					},
					"tokens": {
						"items": {
							"$ref": "#/components/schemas/TokenBalance"
						},
						"type": "array"
					}
				},
				"required": [
					"balance",
					"unconfirmedBalance",
					"pubkey",
					"tokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BadRequestError": {
				"description": "Contains info about a 400 Bad Request response",
				"properties": {
					"error": {
						"type": "string"
					}
				},
				"required": [
					"error"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ValidationError": {
				"description": "Contains info about a 422 Validation Error response",
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Validation failed"
						],
						"nullable": false
					},
					"details": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					}
				},
				"required": [
					"message",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InternalServerError": {
				"description": "Contains info about a 500 Internal Server Error response",
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BaseTx": {
				"description": "Contains base transaction details",
				"properties": {
					"txid": {
						"type": "string"
					},
					"blockHash": {
						"type": "string"
					},
					"blockHeight": {
						"type": "number",
						"format": "double"
					},
					"timestamp": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"txid",
					"blockHeight",
					"timestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TransactionType": {
				"enum": [
					"ANY",
					"UNKNOWN",
					"NFT_BID",
					"NFT_GLOBAL_BID",
					"NFT_GLOBAL_BID_CANCELLED",
					"NFT_BID_CANCELLED",
					"NFT_LISTING",
					"NFT_CANCEL_LISTING",
					"NFT_SALE",
					"NFT_MINT",
					"NFT_AUCTION_CREATED",
					"NFT_AUCTION_UPDATED",
					"NFT_AUCTION_CANCELLED",
					"NFT_PARTICIPATION_REWARD",
					"NFT_MINT_REJECTED",
					"CREATE_STORE",
					"WHITELIST_CREATOR",
					"ADD_TO_WHITELIST",
					"REMOVE_FROM_WHITELIST",
					"AUCTION_MANAGER_CLAIM_BID",
					"EMPTY_PAYMENT_ACCOUNT",
					"UPDATE_PRIMARY_SALE_METADATA",
					"ADD_TOKEN_TO_VAULT",
					"ACTIVATE_VAULT",
					"INIT_VAULT",
					"INIT_BANK",
					"INIT_STAKE",
					"MERGE_STAKE",
					"SPLIT_STAKE",
					"SET_BANK_FLAGS",
					"SET_VAULT_LOCK",
					"UPDATE_VAULT_OWNER",
					"UPDATE_BANK_MANAGER",
					"RECORD_RARITY_POINTS",
					"ADD_RARITIES_TO_BANK",
					"INIT_FARM",
					"INIT_FARMER",
					"REFRESH_FARMER",
					"UPDATE_FARM",
					"AUTHORIZE_FUNDER",
					"DEAUTHORIZE_FUNDER",
					"FUND_REWARD",
					"CANCEL_REWARD",
					"LOCK_REWARD",
					"PAYOUT",
					"VALIDATE_SAFETY_DEPOSIT_BOX_V2",
					"SET_AUTHORITY",
					"INIT_AUCTION_MANAGER_V2",
					"UPDATE_EXTERNAL_PRICE_ACCOUNT",
					"AUCTION_HOUSE_CREATE",
					"CLOSE_ESCROW_ACCOUNT",
					"WITHDRAW",
					"DEPOSIT",
					"TRANSFER",
					"BURN",
					"BURN_NFT",
					"PLATFORM_FEE",
					"LOAN",
					"RESCIND_LOAN",
					"OFFER_LOAN",
					"CANCEL_OFFER",
					"LEND_FOR_NFT",
					"REQUEST_LOAN",
					"CANCEL_LOAN_REQUEST",
					"BORROW_SOL_FOR_NFT",
					"CLAIM_NFT",
					"REBORROW_SOL_FOR_NFT",
					"REPAY_LOAN",
					"TAKE_LOAN",
					"FORECLOSE_LOAN",
					"UPDATE_OFFER",
					"ADD_TO_POOL",
					"REMOVE_FROM_POOL",
					"CLOSE_POSITION",
					"UNLABELED",
					"CLOSE_ACCOUNT",
					"WITHDRAW_GEM",
					"DEPOSIT_GEM",
					"STAKE_TOKEN",
					"UNSTAKE_TOKEN",
					"STAKE_SOL",
					"UNSTAKE_SOL",
					"CLAIM_REWARDS",
					"BUY_SUBSCRIPTION",
					"SWAP",
					"INIT_SWAP",
					"CANCEL_SWAP",
					"REJECT_SWAP",
					"INITIALIZE_ACCOUNT",
					"TOKEN_MINT",
					"CREATE_APPRAISAL",
					"CANDY_MACHINE_WRAP",
					"CANDY_MACHINE_UNWRAP",
					"CANDY_MACHINE_UPDATE",
					"CANDY_MACHINE_ROUTE",
					"FRACTIONALIZE",
					"DEPOSIT_FRACTIONAL_POOL",
					"FUSE",
					"CREATE_RAFFLE",
					"BUY_TICKETS",
					"UPDATE_ITEM",
					"LIST_ITEM",
					"DELIST_ITEM",
					"ADD_ITEM",
					"CLOSE_ITEM",
					"BUY_ITEM",
					"FILL_ORDER",
					"UPDATE_ORDER",
					"CREATE_ORDER",
					"CLOSE_ORDER",
					"CANCEL_ORDER",
					"KICK_ITEM",
					"UPGRADE_FOX",
					"UPGRADE_FOX_REQUEST",
					"LOAN_FOX",
					"BORROW_FOX",
					"SWITCH_FOX_REQUEST",
					"SWITCH_FOX",
					"CREATE_ESCROW",
					"ACCEPT_REQUEST_ARTIST",
					"CANCEL_ESCROW",
					"ACCEPT_ESCROW_ARTIST",
					"ACCEPT_ESCROW_USER",
					"PLACE_BET",
					"PLACE_SOL_BET",
					"CREATE_BET",
					"INIT_RENT",
					"NFT_RENT_LISTING",
					"NFT_RENT_CANCEL_LISTING",
					"NFT_RENT_UPDATE_LISTING",
					"NFT_RENT_ACTIVATE",
					"NFT_RENT_END",
					"UPGRADE_PROGRAM_INSTRUCTION",
					"FINALIZE_PROGRAM_INSTRUCTION",
					"EXECUTE_TRANSACTION",
					"APPROVE_TRANSACTION",
					"ACTIVATE_TRANSACTION",
					"CREATE_TRANSACTION",
					"CANCEL_TRANSACTION",
					"REJECT_TRANSACTION",
					"ADD_INSTRUCTION",
					"CREATE_MASTER_EDITION",
					"ATTACH_METADATA",
					"REQUEST_PNFT_MIGRATION",
					"START_PNFT_MIGRATION",
					"MIGRATE_TO_PNFT",
					"UPDATE_RAFFLE",
					"CREATE_MERKLE_TREE",
					"DELEGATE_MERKLE_TREE",
					"COMPRESSED_NFT_MINT",
					"COMPRESSED_NFT_TRANSFER",
					"COMPRESSED_NFT_REDEEM",
					"COMPRESSED_NFT_CANCEL_REDEEM",
					"COMPRESSED_NFT_BURN",
					"COMPRESSED_NFT_VERIFY_CREATOR",
					"COMPRESSED_NFT_UNVERIFY_CREATOR",
					"COMPRESSED_NFT_VERIFY_COLLECTION",
					"COMPRESSED_NFT_UNVERIFY_COLLECTION",
					"COMPRESSED_NFT_SET_VERIFY_COLLECTION",
					"DECOMPRESS_NFT",
					"COMPRESS_NFT",
					"COMPRESSED_NFT_DELEGATE",
					"CREATE_POOL",
					"DISTRIBUTE_COMPRESSION_REWARDS",
					"CHANGE_COMIC_STATE",
					"UPDATE_RECORD_AUTHORITY_DATA"
				],
				"type": "string"
			},
			"Source": {
				"enum": [
					"FORM_FUNCTION",
					"EXCHANGE_ART",
					"CANDY_MACHINE_V3",
					"CANDY_MACHINE_V2",
					"CANDY_MACHINE_V1",
					"UNKNOWN",
					"SOLANART",
					"SOLSEA",
					"MAGIC_EDEN",
					"HOLAPLEX",
					"METAPLEX",
					"OPENSEA",
					"SOLANA_PROGRAM_LIBRARY",
					"ANCHOR",
					"PHANTOM",
					"SYSTEM_PROGRAM",
					"STAKE_PROGRAM",
					"COINBASE",
					"CORAL_CUBE",
					"HEDGE",
					"LAUNCH_MY_NFT",
					"GEM_BANK",
					"GEM_FARM",
					"DEGODS",
					"BLOCKSMITH_LABS",
					"YAWWW",
					"ATADIA",
					"DIGITAL_EYES",
					"HYPERSPACE",
					"TENSOR",
					"BIFROST",
					"JUPITER",
					"MERCURIAL_STABLE_SWAP",
					"SABER",
					"SERUM",
					"STEP_FINANCE",
					"CROPPER",
					"RAYDIUM",
					"ALDRIN",
					"CREMA",
					"LIFINITY",
					"CYKURA",
					"ORCA",
					"MARINADE",
					"STEPN",
					"SENCHA_EXCHANGE",
					"SAROS",
					"ENGLISH_AUCTION",
					"FOXY",
					"HADESWAP",
					"FOXY_STAKING",
					"FOXY_RAFFLE",
					"FOXY_TOKEN_MARKET",
					"FOXY_MISSIONS",
					"FOXY_MARMALADE",
					"FOXY_COINFLIP",
					"FOXY_AUCTION",
					"CITRUS",
					"ZETA",
					"ELIXIR",
					"ELIXIR_LAUNCHPAD",
					"CARDINAL_RENT",
					"CARDINAL_STAKING",
					"BPF_LOADER",
					"BPF_UPGRADEABLE_LOADER",
					"SQUADS",
					"SHARKY_FI",
					"OPEN_CREATOR_PROTOCOL",
					"BUBBLEGUM",
					"W_SOL",
					"DUST",
					"SOLI",
					"USDC",
					"FLWR",
					"HDG",
					"MEAN",
					"UXD",
					"SHDW",
					"POLIS",
					"ATLAS",
					"USH",
					"TRTLS",
					"RUNNER",
					"INVICTUS"
				],
				"type": "string"
			},
			"NativeTransfer": {
				"properties": {
					"fromUserAccount": {
						"type": "string",
						"nullable": true
					},
					"toUserAccount": {
						"type": "string",
						"nullable": true
					},
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"fromUserAccount",
					"toUserAccount",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenStandard": {
				"enum": [
					"ProgrammableNonFungible",
					"NonFungible",
					"Fungible",
					"FungibleAsset",
					"NonFungibleEdition",
					"UnknownStandard"
				],
				"type": "string"
			},
			"TokenTransfer": {
				"properties": {
					"fromUserAccount": {
						"type": "string",
						"nullable": true
					},
					"toUserAccount": {
						"type": "string",
						"nullable": true
					},
					"fromTokenAccount": {
						"type": "string",
						"nullable": true
					},
					"toTokenAccount": {
						"type": "string",
						"nullable": true
					},
					"tokenAmount": {
						"type": "number",
						"format": "double"
					},
					"decimals": {
						"type": "number",
						"format": "double"
					},
					"tokenStandard": {
						"$ref": "#/components/schemas/TokenStandard"
					},
					"mint": {
						"type": "string"
					}
				},
				"required": [
					"fromUserAccount",
					"toUserAccount",
					"fromTokenAccount",
					"toTokenAccount",
					"tokenAmount",
					"decimals",
					"tokenStandard",
					"mint"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RawTokenAmount": {
				"properties": {
					"tokenAmount": {
						"type": "string"
					},
					"decimals": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"tokenAmount",
					"decimals"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenBalanceChange": {
				"properties": {
					"userAccount": {
						"type": "string"
					},
					"tokenAccount": {
						"type": "string"
					},
					"rawTokenAmount": {
						"$ref": "#/components/schemas/RawTokenAmount"
					},
					"mint": {
						"type": "string"
					}
				},
				"required": [
					"userAccount",
					"tokenAccount",
					"rawTokenAmount",
					"mint"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AccountData": {
				"properties": {
					"account": {
						"type": "string"
					},
					"nativeBalanceChange": {
						"type": "number",
						"format": "double"
					},
					"tokenBalanceChanges": {
						"items": {
							"$ref": "#/components/schemas/TokenBalanceChange"
						},
						"type": "array",
						"nullable": true
					}
				},
				"required": [
					"account",
					"nativeBalanceChange",
					"tokenBalanceChanges"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TransactionError": {
				"anyOf": [
					{
						"properties": {},
						"type": "object"
					},
					{
						"type": "string"
					}
				],
				"description": "Transaction error"
			},
			"InnerInstruction": {
				"properties": {
					"programId": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"accounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"programId",
					"data",
					"accounts"
				],
				"type": "object"
			},
			"Instruction": {
				"properties": {
					"innerInstructions": {
						"items": {
							"$ref": "#/components/schemas/InnerInstruction"
						},
						"type": "array"
					},
					"programId": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"accounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"innerInstructions",
					"programId",
					"data",
					"accounts"
				],
				"type": "object"
			},
			"TransactionContext": {
				"enum": [
					"AUCTION",
					"INSTANT_SALE",
					"OFFER",
					"GLOBAL_OFFER",
					"MINT",
					"UNKNOWN"
				],
				"type": "string"
			},
			"Token": {
				"description": "Contains info about a token",
				"properties": {
					"id": {
						"type": "string"
					},
					"decimals": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"symbol": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"decimals",
					"name",
					"symbol",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NFTEvent": {
				"properties": {
					"seller": {
						"type": "string"
					},
					"buyer": {
						"type": "string"
					},
					"timestamp": {
						"type": "number",
						"format": "double"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"fee": {
						"type": "number",
						"format": "double"
					},
					"signature": {
						"type": "string"
					},
					"source": {
						"$ref": "#/components/schemas/Source"
					},
					"type": {
						"$ref": "#/components/schemas/TransactionType"
					},
					"saleType": {
						"$ref": "#/components/schemas/TransactionContext"
					},
					"nfts": {
						"items": {
							"$ref": "#/components/schemas/Token"
						},
						"type": "array"
					}
				},
				"required": [
					"seller",
					"buyer",
					"timestamp",
					"amount",
					"fee",
					"signature",
					"source",
					"type",
					"nfts"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NativeBalanceChange": {
				"properties": {
					"account": {
						"type": "string"
					},
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"account",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProgramName": {
				"enum": [
					"UNKNOWN",
					"JUPITER_V1",
					"JUPITER_V2",
					"JUPITER_V3",
					"JUPITER_V4",
					"MERCURIAL_STABLE_SWAP",
					"SABER_STABLE_SWAP",
					"SABER_EXCHANGE",
					"SERUM_DEX_V1",
					"SERUM_DEX_V2",
					"SERUM_DEX_V3",
					"SERUM_SWAP",
					"STEP_FINANCE",
					"CROPPER",
					"RAYDIUM_LIQUIDITY_POOL_V2",
					"RAYDIUM_LIQUIDITY_POOL_V3",
					"RAYDIUM_LIQUIDITY_POOL_V4",
					"ALDRIN_AMM_V1",
					"ALDRIN_AMM_V2",
					"CREMA",
					"LIFINITY",
					"LIFINITY_V2",
					"CYKURA",
					"ORCA_TOKEN_SWAP_V1",
					"ORCA_TOKEN_SWAP_V2",
					"ORCA_WHIRLPOOLS",
					"MARINADE",
					"STEPN",
					"SENCHA_EXCHANGE",
					"SAROS_AMM",
					"FOXY_STAKE",
					"FOXY_SWAP",
					"FOXY_RAFFLE",
					"FOXY_TOKEN_MARKET",
					"FOXY_MISSIONS",
					"FOXY_MARMALADE",
					"FOXY_COINFLIP",
					"FOXY_AUCTION",
					"CITRUS",
					"HADE_SWAP",
					"ZETA",
					"CARDINAL_RENT",
					"CARDINAL_STAKING",
					"SHARKY_FI",
					"OPEN_CREATOR_PROTOCOL",
					"BUBBLEGUM",
					"CORAL_CUBE"
				],
				"type": "string"
			},
			"ProgramInfo": {
				"properties": {
					"source": {
						"$ref": "#/components/schemas/Source"
					},
					"account": {
						"type": "string"
					},
					"programName": {
						"$ref": "#/components/schemas/ProgramName"
					},
					"instructionName": {
						"type": "string"
					}
				},
				"required": [
					"source",
					"account",
					"programName",
					"instructionName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenSwap": {
				"properties": {
					"nativeInput": {
						"allOf": [
							{
								"$ref": "#/components/schemas/NativeTransfer"
							}
						],
						"nullable": true
					},
					"nativeOutput": {
						"allOf": [
							{
								"$ref": "#/components/schemas/NativeTransfer"
							}
						],
						"nullable": true
					},
					"tokenInputs": {
						"items": {
							"$ref": "#/components/schemas/TokenTransfer"
						},
						"type": "array"
					},
					"tokenOutputs": {
						"items": {
							"$ref": "#/components/schemas/TokenTransfer"
						},
						"type": "array"
					},
					"tokenFees": {
						"items": {
							"$ref": "#/components/schemas/TokenTransfer"
						},
						"type": "array"
					},
					"nativeFees": {
						"items": {
							"$ref": "#/components/schemas/NativeTransfer"
						},
						"type": "array"
					},
					"programInfo": {
						"$ref": "#/components/schemas/ProgramInfo"
					}
				},
				"required": [
					"nativeInput",
					"nativeOutput",
					"tokenInputs",
					"tokenOutputs",
					"tokenFees",
					"nativeFees",
					"programInfo"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SwapEvent": {
				"properties": {
					"nativeInput": {
						"$ref": "#/components/schemas/NativeBalanceChange"
					},
					"nativeOutput": {
						"$ref": "#/components/schemas/NativeBalanceChange"
					},
					"tokenInputs": {
						"items": {
							"$ref": "#/components/schemas/TokenBalanceChange"
						},
						"type": "array"
					},
					"tokenOutputs": {
						"items": {
							"$ref": "#/components/schemas/TokenBalanceChange"
						},
						"type": "array"
					},
					"tokenFees": {
						"items": {
							"$ref": "#/components/schemas/TokenBalanceChange"
						},
						"type": "array"
					},
					"nativeFees": {
						"items": {
							"$ref": "#/components/schemas/NativeBalanceChange"
						},
						"type": "array"
					},
					"innerSwaps": {
						"items": {
							"$ref": "#/components/schemas/TokenSwap"
						},
						"type": "array"
					}
				},
				"required": [
					"nativeInput",
					"nativeOutput",
					"tokenInputs",
					"tokenOutputs",
					"tokenFees",
					"nativeFees",
					"innerSwaps"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CompressedNftCreator": {
				"properties": {
					"address": {
						"type": "string"
					},
					"share": {
						"type": "number",
						"format": "double"
					},
					"verified": {
						"type": "boolean"
					}
				},
				"required": [
					"address",
					"share",
					"verified"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CompressedNftMetadata": {
				"properties": {
					"collection": {
						"properties": {
							"verified": {
								"type": "boolean"
							},
							"key": {
								"type": "string"
							}
						},
						"required": [
							"verified",
							"key"
						],
						"type": "object"
					},
					"creators": {
						"items": {
							"$ref": "#/components/schemas/CompressedNftCreator"
						},
						"type": "array"
					},
					"isMutable": {
						"type": "boolean"
					},
					"name": {
						"type": "string"
					},
					"primarySaleHappened": {
						"type": "boolean"
					},
					"sellerFeeBasisPoints": {
						"type": "number",
						"format": "double"
					},
					"symbol": {
						"type": "string"
					},
					"tokenProgramVersion": {
						"type": "string"
					},
					"tokenStandard": {
						"$ref": "#/components/schemas/TokenStandard"
					},
					"uri": {
						"type": "string"
					}
				},
				"required": [
					"collection",
					"creators",
					"isMutable",
					"name",
					"primarySaleHappened",
					"sellerFeeBasisPoints",
					"symbol",
					"tokenProgramVersion",
					"tokenStandard",
					"uri"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CompressedNftEvent": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/TransactionType"
					},
					"treeId": {
						"type": "string"
					},
					"leafIndex": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"seq": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"assetId": {
						"type": "string",
						"nullable": true
					},
					"instructionIndex": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"innerInstructionIndex": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"newLeafOwner": {
						"type": "string",
						"nullable": true
					},
					"oldLeafOwner": {
						"type": "string",
						"nullable": true
					},
					"newLeafDelegate": {
						"type": "string",
						"nullable": true
					},
					"oldLeafDelegate": {
						"type": "string",
						"nullable": true
					},
					"treeDelegate": {
						"type": "string",
						"nullable": true
					},
					"metadata": {
						"allOf": [
							{
								"$ref": "#/components/schemas/CompressedNftMetadata"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"type",
					"treeId",
					"leafIndex",
					"seq",
					"assetId",
					"instructionIndex",
					"innerInstructionIndex",
					"newLeafOwner",
					"oldLeafOwner",
					"newLeafDelegate",
					"oldLeafDelegate",
					"treeDelegate",
					"metadata"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TransactionEvent": {
				"properties": {
					"nft": {
						"allOf": [
							{
								"$ref": "#/components/schemas/NFTEvent"
							}
						],
						"nullable": true
					},
					"swap": {
						"allOf": [
							{
								"$ref": "#/components/schemas/SwapEvent"
							}
						],
						"nullable": true
					},
					"compressed": {
						"items": {
							"$ref": "#/components/schemas/CompressedNftEvent"
						},
						"type": "array",
						"nullable": true
					}
				},
				"required": [
					"nft",
					"swap",
					"compressed"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EnrichedTransaction": {
				"properties": {
					"description": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/TransactionType"
					},
					"source": {
						"$ref": "#/components/schemas/Source"
					},
					"fee": {
						"type": "number",
						"format": "double"
					},
					"feePayer": {
						"type": "string"
					},
					"signature": {
						"type": "string"
					},
					"slot": {
						"type": "number",
						"format": "double"
					},
					"timestamp": {
						"type": "number",
						"format": "double"
					},
					"nativeTransfers": {
						"items": {
							"$ref": "#/components/schemas/NativeTransfer"
						},
						"type": "array",
						"nullable": true
					},
					"tokenTransfers": {
						"items": {
							"$ref": "#/components/schemas/TokenTransfer"
						},
						"type": "array",
						"nullable": true
					},
					"accountData": {
						"items": {
							"$ref": "#/components/schemas/AccountData"
						},
						"type": "array"
					},
					"transactionError": {
						"allOf": [
							{
								"$ref": "#/components/schemas/TransactionError"
							}
						],
						"nullable": true
					},
					"instructions": {
						"items": {
							"$ref": "#/components/schemas/Instruction"
						},
						"type": "array"
					},
					"events": {
						"$ref": "#/components/schemas/TransactionEvent"
					}
				},
				"required": [
					"description",
					"type",
					"source",
					"fee",
					"feePayer",
					"signature",
					"slot",
					"timestamp",
					"nativeTransfers",
					"tokenTransfers",
					"accountData",
					"transactionError",
					"instructions",
					"events"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Tx": {
				"allOf": [
					{
						"$ref": "#/components/schemas/BaseTx"
					},
					{
						"$ref": "#/components/schemas/EnrichedTransaction"
					}
				],
				"description": "Contains info about a transaction"
			},
			"BaseTxHistory_Tx_": {
				"description": "Contains paginated base transaction history details",
				"properties": {
					"cursor": {
						"type": "string"
					},
					"pubkey": {
						"type": "string"
					},
					"txs": {
						"items": {
							"$ref": "#/components/schemas/Tx"
						},
						"type": "array"
					}
				},
				"required": [
					"pubkey",
					"txs"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TxHistory": {
				"$ref": "#/components/schemas/BaseTxHistory_Tx_",
				"description": "Contains info about transaction history"
			},
			"SendTxBody": {
				"description": "Contains the serialized raw transaction hex",
				"properties": {
					"hex": {
						"type": "string"
					}
				},
				"required": [
					"hex"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PriorityFees": {
				"description": "Contains info about current recommended priority fees for a transaction to land.",
				"properties": {
					"baseFee": {
						"type": "string"
					},
					"slow": {
						"type": "string"
					},
					"average": {
						"type": "string"
					},
					"fast": {
						"type": "string"
					}
				},
				"required": [
					"baseFee",
					"slow",
					"average",
					"fast"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EstimateFeesBody": {
				"anyOf": [
					{
						"properties": {
							"serializedTx": {
								"type": "string"
							}
						},
						"type": "object"
					},
					{
						"properties": {
							"message": {
								"type": "string"
							}
						},
						"type": "object"
					}
				],
				"description": "Contains the base64 encoded serialized transaction"
			},
			"RPCResponse": {
				"properties": {
					"jsonrpc": {
						"type": "string",
						"enum": [
							"2.0"
						],
						"nullable": false
					},
					"id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"result": {},
					"error": {
						"properties": {
							"data": {},
							"message": {
								"type": "string"
							},
							"code": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"message",
							"code"
						],
						"type": "object"
					}
				},
				"required": [
					"jsonrpc",
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RPCRequest": {
				"properties": {
					"jsonrpc": {
						"type": "string",
						"enum": [
							"2.0"
						],
						"nullable": false
					},
					"id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"method": {
						"type": "string"
					},
					"params": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"jsonrpc",
					"id",
					"method"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "@shapeshiftoss/solana-api",
		"version": "10.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/v1/info": {
			"get": {
				"operationId": "GetInfo",
				"responses": {
					"200": {
						"description": "coinstack info",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseInfo"
								},
								"examples": {
									"Example 1": {
										"value": {
											"network": "mainnet"
										}
									}
								}
							}
						}
					}
				},
				"description": "Get information about the running coinstack",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/v1/account/{pubkey}": {
			"get": {
				"operationId": "GetAccount",
				"responses": {
					"200": {
						"description": "account details",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Account"
								},
								"examples": {
									"Example 1": {
										"value": {
											"pubkey": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M",
											"balance": "0",
											"unconfirmedBalance": "0",
											"tokens": []
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Get account details by address or extended public key",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [
					{
						"description": "account address or extended public key",
						"in": "path",
						"name": "pubkey",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M"
					}
				]
			}
		},
		"/api/v1/account/{pubkey}/txs": {
			"get": {
				"operationId": "GetTxHistory",
				"responses": {
					"200": {
						"description": "transaction history",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TxHistory"
								},
								"examples": {
									"Example 1": {
										"value": {
											"pubkey": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M",
											"txs": [
												{
													"txid": "5KDSVYdUSSKSgTcq1PJFmo3vMSNeP383Q3xVqWhGX4xExaYtYmcygA7wncwz8gVgZMbhKtg5ZekD9fsF6T5mCMAv",
													"blockHeight": 296167290,
													"description": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M transferred 0.132585825 SOL to 97UQvPXbadGSsVaGuJCBLRm3Mkm7A5DVJ2HktRzrnDTB.",
													"type": "TRANSFER",
													"source": "SYSTEM_PROGRAM",
													"fee": 5000,
													"feePayer": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M",
													"signature": "5KDSVYdUSSKSgTcq1PJFmo3vMSNeP383Q3xVqWhGX4xExaYtYmcygA7wncwz8gVgZMbhKtg5ZekD9fsF6T5mCMAv",
													"slot": 296167290,
													"timestamp": 1729185925,
													"tokenTransfers": [],
													"nativeTransfers": [
														{
															"fromUserAccount": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M",
															"toUserAccount": "97UQvPXbadGSsVaGuJCBLRm3Mkm7A5DVJ2HktRzrnDTB",
															"amount": 132585825
														}
													],
													"accountData": [
														{
															"account": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M",
															"nativeBalanceChange": -132590825,
															"tokenBalanceChanges": []
														},
														{
															"account": "97UQvPXbadGSsVaGuJCBLRm3Mkm7A5DVJ2HktRzrnDTB",
															"nativeBalanceChange": 132585825,
															"tokenBalanceChanges": []
														},
														{
															"account": "11111111111111111111111111111111",
															"nativeBalanceChange": 0,
															"tokenBalanceChanges": []
														}
													],
													"transactionError": null,
													"instructions": [
														{
															"accounts": [
																"2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M",
																"97UQvPXbadGSsVaGuJCBLRm3Mkm7A5DVJ2HktRzrnDTB"
															],
															"data": "3Bxs4H6fRtDxLiaT",
															"programId": "11111111111111111111111111111111",
															"innerInstructions": []
														}
													],
													"events": {
														"compressed": null,
														"nft": null,
														"swap": null
													}
												}
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Get transaction history by address",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [
					{
						"description": "account address",
						"in": "path",
						"name": "pubkey",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M"
					},
					{
						"description": "the cursor returned in previous query (used as lastSignature)",
						"in": "query",
						"name": "cursor",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "page size (10 by default)",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/v1/tx/{txid}": {
			"get": {
				"operationId": "GetTransaction",
				"responses": {
					"200": {
						"description": "transaction payload",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tx"
								},
								"examples": {
									"Example 1": {
										"value": {
											"txid": "5KDSVYdUSSKSgTcq1PJFmo3vMSNeP383Q3xVqWhGX4xExaYtYmcygA7wncwz8gVgZMbhKtg5ZekD9fsF6T5mCMAv",
											"blockHeight": 296167290,
											"description": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M transferred 0.132585825 SOL to 97UQvPXbadGSsVaGuJCBLRm3Mkm7A5DVJ2HktRzrnDTB.",
											"type": "TRANSFER",
											"source": "SYSTEM_PROGRAM",
											"fee": 5000,
											"feePayer": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M",
											"signature": "5KDSVYdUSSKSgTcq1PJFmo3vMSNeP383Q3xVqWhGX4xExaYtYmcygA7wncwz8gVgZMbhKtg5ZekD9fsF6T5mCMAv",
											"slot": 296167290,
											"timestamp": 1729185925,
											"tokenTransfers": [],
											"nativeTransfers": [
												{
													"fromUserAccount": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M",
													"toUserAccount": "97UQvPXbadGSsVaGuJCBLRm3Mkm7A5DVJ2HktRzrnDTB",
													"amount": 132585825
												}
											],
											"accountData": [
												{
													"account": "2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M",
													"nativeBalanceChange": -132590825,
													"tokenBalanceChanges": []
												},
												{
													"account": "97UQvPXbadGSsVaGuJCBLRm3Mkm7A5DVJ2HktRzrnDTB",
													"nativeBalanceChange": 132585825,
													"tokenBalanceChanges": []
												},
												{
													"account": "11111111111111111111111111111111",
													"nativeBalanceChange": 0,
													"tokenBalanceChanges": []
												}
											],
											"transactionError": null,
											"instructions": [
												{
													"accounts": [
														"2bUNK6eVUmXyxeSDURsWdqi1KK8BYu4egnzyi3xDYc9M",
														"97UQvPXbadGSsVaGuJCBLRm3Mkm7A5DVJ2HktRzrnDTB"
													],
													"data": "3Bxs4H6fRtDxLiaT",
													"programId": "11111111111111111111111111111111",
													"innerInstructions": []
												}
											],
											"events": {
												"compressed": null,
												"nft": null,
												"swap": null
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Get transaction details",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [
					{
						"description": "transaction signature",
						"in": "path",
						"name": "txid",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "5KDSVYdUSSKSgTcq1PJFmo3vMSNeP383Q3xVqWhGX4xExaYtYmcygA7wncwz8gVgZMbhKtg5ZekD9fsF6T5mCMAv"
					}
				]
			}
		},
		"/api/v1/send": {
			"post": {
				"operationId": "SendTx",
				"responses": {
					"200": {
						"description": "transaction signature",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Sends raw transaction to be broadcast to the node.",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "serialized raw transaction (base64 encoded)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SendTxBody",
								"description": "serialized raw transaction (base64 encoded)"
							}
						}
					}
				}
			}
		},
		"/api/v1/fees/priority": {
			"get": {
				"operationId": "GetPriorityFees",
				"responses": {
					"200": {
						"description": "current priority fees specified in micro-lamports",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PriorityFees"
								},
								"examples": {
									"Example 1": {
										"value": {
											"baseFee": "5000",
											"slow": "0",
											"average": "10",
											"fast": "400000"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Get the current recommended priority fees for a transaction to land",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/v1/fees/estimate": {
			"post": {
				"operationId": "EstimateFees",
				"responses": {
					"200": {
						"description": "estimated compute unit cost",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestError"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Get the estimated compute unit cost of a transaction",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "transaction message (base64 encoded)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EstimateFeesBody",
								"description": "transaction message (base64 encoded)"
							}
						}
					}
				}
			}
		},
		"/api/v1/jsonrpc": {
			"post": {
				"operationId": "DoRpcRequest",
				"responses": {
					"200": {
						"description": "jsonrpc response or batch responses",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/RPCResponse"
										},
										{
											"items": {
												"$ref": "#/components/schemas/RPCResponse"
											},
											"type": "array"
										}
									]
								},
								"examples": {
									"Example 1": {
										"value": {
											"jsonrpc": "2.0",
											"id": "test",
											"result": 274885350
										}
									}
								}
							}
						}
					}
				},
				"description": "Makes a jsonrpc request to the node.",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "jsonrpc request or batch requests",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/RPCRequest"
									},
									{
										"items": {
											"$ref": "#/components/schemas/RPCRequest"
										},
										"type": "array"
									}
								],
								"description": "jsonrpc request or batch requests"
							},
							"example": {
								"jsonrpc": "2.0",
								"id": "test",
								"method": "getBlockHeight",
								"params": []
							}
						}
					}
				}
			}
		},
		"/api/v1/token/{id}": {
			"get": {
				"operationId": "GetToken",
				"responses": {
					"200": {
						"description": "token details",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Token"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
											"name": "USD Coin",
											"symbol": "USDC",
											"decimals": 6,
											"type": "FungibleToken"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidationError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"description": "Get token details",
				"tags": [
					"v1"
				],
				"security": [],
				"parameters": [
					{
						"description": "token id",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}